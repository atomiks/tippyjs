{"version":3,"file":"tippy-addons.min.js","sources":["../../src/browser.ts","../../src/utils.ts","../../src/addons/delegate.ts","../../src/addons/createSingleton.ts","../../build/addons.js"],"sourcesContent":["export const isBrowser =\n  typeof window !== 'undefined' && typeof document !== 'undefined'\n\nconst ua = isBrowser ? navigator.userAgent : ''\n\nexport const isIE = /MSIE |Trident\\//.test(ua)\nexport const isUCBrowser = /UCBrowser\\//.test(ua)\nexport const isIOS = isBrowser && /iPhone|iPad|iPod/.test(navigator.platform)\n","import { Props, ReferenceElement, Targets } from './types'\nimport { arrayFrom } from './ponyfills'\nimport { isUCBrowser } from './browser'\nimport { getDataAttributeProps } from './reference'\nimport { POPPER_CLASS } from './constants'\n\n/**\n * Determines if the value is a reference element\n */\nexport function isReferenceElement(value: any): value is ReferenceElement {\n  return !!(value && value._tippy && !value.classList.contains(POPPER_CLASS))\n}\n\n/**\n * Safe .hasOwnProperty check, for prototype-less objects\n */\nexport function hasOwnProperty(obj: object, key: string): boolean {\n  return {}.hasOwnProperty.call(obj, key)\n}\n\n/**\n * Returns an array of elements based on the value\n */\nexport function getArrayOfElements(value: Targets): Element[] {\n  if (isRealElement(value)) {\n    return [value]\n  }\n\n  if (value instanceof NodeList) {\n    return arrayFrom(value)\n  }\n\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  try {\n    return arrayFrom(document.querySelectorAll(value))\n  } catch (e) {\n    return []\n  }\n}\n\n/**\n * Returns a value at a given index depending on if it's an array or number\n */\nexport function getValue(value: any, index: number, defaultValue: any): any {\n  if (Array.isArray(value)) {\n    const v = value[index]\n    return v == null ? defaultValue : v\n  }\n\n  return value\n}\n\n/**\n * Prevents errors from being thrown while accessing nested modifier objects\n * in `popperOptions`\n */\nexport function getModifier(obj: any, key: string): any {\n  return obj && obj.modifiers && obj.modifiers[key]\n}\n\n/**\n * Determines if an array or string includes a value\n */\nexport function includes(a: any[] | string, b: any): boolean {\n  return a.indexOf(b) > -1\n}\n\n/**\n * Determines if the value is a real element\n */\nexport function isRealElement(value: any): value is Element {\n  return value instanceof Element\n}\n\n/**\n * Firefox extensions don't allow setting .innerHTML directly, this will trick\n * it\n */\nexport function innerHTML(): 'innerHTML' {\n  return 'innerHTML'\n}\n\n/**\n * Evaluates a function if one, or returns the value\n */\nexport function invokeWithArgsOrReturn(value: any, args: any[]): any {\n  return typeof value === 'function' ? value.apply(null, args) : value\n}\n\n/**\n * Sets a popperInstance `flip` modifier's enabled state\n */\nexport function setFlipModifierEnabled(modifiers: any[], value: any): void {\n  modifiers.filter((m): boolean => m.name === 'flip')[0].enabled = value\n}\n\n/**\n * Returns a new `div` element\n */\nexport function div(): HTMLDivElement {\n  return document.createElement('div')\n}\n\n/**\n * Applies a transition duration to a list of elements\n */\nexport function setTransitionDuration(\n  els: (HTMLDivElement | null)[],\n  value: number,\n): void {\n  els.forEach(\n    (el): void => {\n      if (el) {\n        el.style.transitionDuration = `${value}ms`\n      }\n    },\n  )\n}\n\n/**\n * Sets the visibility state to elements so they can begin to transition\n */\nexport function setVisibilityState(\n  els: (HTMLDivElement | null)[],\n  state: 'visible' | 'hidden',\n): void {\n  els.forEach(\n    (el): void => {\n      if (el) {\n        el.setAttribute('data-state', state)\n      }\n    },\n  )\n}\n\n/**\n * Evaluates the props object by merging data attributes and disabling\n * conflicting props where necessary\n */\nexport function evaluateProps(\n  reference: ReferenceElement,\n  props: Props,\n): Props {\n  const out = {\n    ...props,\n    content: invokeWithArgsOrReturn(props.content, [reference]),\n    ...(props.ignoreAttributes ? {} : getDataAttributeProps(reference)),\n  }\n\n  if (out.arrow || isUCBrowser) {\n    out.animateFill = false\n  }\n\n  return out\n}\n\n/**\n * Debounce utility. To avoid bloating bundle size, we're only passing 1\n * argument here, a more generic function would pass all arguments. Only\n * `onMouseMove` uses this which takes the event object for now.\n */\nexport function debounce<T>(\n  fn: (arg: T) => void,\n  ms: number,\n): (arg: T) => void {\n  // Avoid wrapping in `setTimeout` if ms is 0 anyway\n  if (ms === 0) {\n    return fn\n  }\n\n  let timeout: any\n\n  return (arg): void => {\n    clearTimeout(timeout)\n    timeout = setTimeout((): void => {\n      fn(arg)\n    }, ms)\n  }\n}\n","import { Targets, Instance, Props } from '../types'\nimport tippy from '..'\nimport { throwErrorWhen } from '../validation'\n\ninterface ListenerObj {\n  element: Element\n  eventType: string\n  listener: EventListener\n  options: boolean | object\n}\n\n/**\n * Creates a delegate instance that controls the creation of tippy instances\n * for child elements (`target` CSS selector).\n * Port of v4's `target` prop to a separate function.\n */\nexport default function delegate(\n  targets: Targets,\n  props: Props & { target: string },\n): Instance | Instance[] | null {\n  if (__DEV__) {\n    throwErrorWhen(\n      !props || !props.target,\n      'You must specify a `target` prop indicating the CSS selector string ' +\n        'matching the target elements that should receive a tippy.',\n    )\n  }\n\n  let listeners: ListenerObj[] = []\n  let childTippyInstances: Instance[] = []\n\n  const { target } = props\n  delete props.target\n\n  const instanceOrInstances = tippy(targets, props)\n\n  function onTrigger(event: Event): void {\n    if (event.target) {\n      const targetNode = (event.target as Element).closest(target)\n\n      if (targetNode) {\n        const instance = tippy(targetNode, { ...props, showOnInit: true })\n\n        if (instance) {\n          childTippyInstances = childTippyInstances.concat(instance)\n        }\n      }\n    }\n  }\n\n  function on(\n    element: Element,\n    eventType: string,\n    listener: EventListener,\n    options: object | boolean = false,\n  ): void {\n    element.addEventListener(eventType, listener, options)\n    listeners.push({\n      element,\n      eventType,\n      listener,\n      options,\n    })\n  }\n\n  function addEventListeners(instance: Instance): void {\n    const { reference } = instance\n    instance.props.trigger\n      .trim()\n      .split(' ')\n      .forEach(\n        (eventType): void => {\n          switch (eventType) {\n            case 'mouseenter': {\n              on(reference, 'mouseover', onTrigger)\n              break\n            }\n            case 'focus': {\n              on(reference, 'focusin', onTrigger)\n              break\n            }\n            case 'click': {\n              on(reference, 'click', onTrigger)\n            }\n          }\n        },\n      )\n  }\n\n  function removeEventListeners(listeners: ListenerObj[]): void {\n    listeners.forEach(\n      ({ element, eventType, listener, options }: ListenerObj): void => {\n        element.removeEventListener(eventType, listener, options)\n      },\n    )\n    listeners = []\n  }\n\n  function applyMutations(instance: Instance): void {\n    const originalDestroy = instance.destroy\n    instance.destroy = (shouldDestroyChildInstances: boolean = true): void => {\n      if (shouldDestroyChildInstances) {\n        childTippyInstances.forEach(\n          (instance): void => {\n            instance.destroy()\n          },\n        )\n      }\n      childTippyInstances = []\n\n      removeEventListeners(listeners)\n      originalDestroy()\n    }\n\n    addEventListeners(instance)\n\n    instance.setProps({ trigger: 'manual' })\n  }\n\n  if (instanceOrInstances) {\n    if (Array.isArray(instanceOrInstances)) {\n      const instances = instanceOrInstances\n      instances.forEach(applyMutations)\n    } else {\n      const instance = instanceOrInstances\n      applyMutations(instance)\n    }\n  }\n\n  return instanceOrInstances\n}\n","import { Instance } from '../types'\nimport tippy from '..'\nimport { getValue, hasOwnProperty } from '../utils'\nimport { throwErrorWhen } from '../validation'\n\ninterface InstanceMaybePartOfSingleton extends Instance {\n  __singleton__?: boolean\n}\n\n/**\n * Re-uses a single tippy element for many different tippy instances.\n * Replaces v4's `tippy.group()`.\n */\nexport default function createSingleton(\n  tippyInstances: InstanceMaybePartOfSingleton[],\n  optionalProps: { delay: number | [number, number] } = { delay: 0 },\n): Instance {\n  if (__DEV__) {\n    if (!Array.isArray(tippyInstances)) {\n      throwErrorWhen(\n        !tippyInstances,\n        'First argument to `createSingleton()` must be an array of tippy ' +\n          'instances. The passed value was `' +\n          tippyInstances +\n          '`',\n      )\n\n      throwErrorWhen(\n        // @ts-ignore\n        tippyInstances.reference && tippyInstances.reference._tippy,\n        'First argument to `createSingleton()` must be an *array* of tippy ' +\n          'instances. The passed value was a *single* tippy instance.',\n      )\n    }\n\n    const isAnyInstancePartOfExistingSingleton = tippyInstances.some(\n      (instance): boolean => hasOwnProperty(instance, '__singleton__'),\n    )\n\n    throwErrorWhen(\n      isAnyInstancePartOfExistingSingleton,\n      'The passed tippy instance(s) are already part of an existing ' +\n        'singleton instance. Make sure you destroy the previous singleton ' +\n        'before calling `createSingleton()` again.',\n    )\n\n    tippyInstances.forEach(\n      (instance): void => {\n        instance.__singleton__ = true\n      },\n    )\n  }\n\n  const singletonInstance = tippy(document.createElement('div')) as Instance\n  let { delay } = optionalProps\n\n  let showTimeout: any\n  let hideTimeout: any\n  let onTrigger: (instance: Instance, event: Event) => void\n  let onUntrigger: (instance: Instance, event: Event) => void\n\n  function clearTimeouts(): void {\n    clearTimeout(showTimeout)\n    clearTimeout(hideTimeout)\n  }\n\n  tippyInstances.forEach(\n    (instance): void => {\n      // To prevent bugs with `hideOnClick`, we need to let the original tippy\n      // instance also go through its lifecycle (i.e. be mounted to the DOM as\n      // well). To prevent it from being seen/overlayed over the singleton\n      // tippy, we can set its opacity to 0\n      instance.popper.style.opacity = '0'\n\n      onTrigger = instance.props.onTrigger\n      onUntrigger = instance.props.onUntrigger\n\n      const originalClearDelayTimeouts = instance.clearDelayTimeouts\n      instance.clearDelayTimeouts = (): void => {\n        originalClearDelayTimeouts()\n        clearTimeouts()\n      }\n\n      instance.setProps({\n        delay: 0,\n        onTrigger(instance, event): void {\n          onTrigger(instance, event)\n\n          const props = { ...instance.props }\n          delete props.delay\n\n          singletonInstance.setProps(props)\n\n          singletonInstance.reference.getBoundingClientRect = ():\n            | DOMRect\n            | ClientRect => {\n            return instance.reference.getBoundingClientRect()\n          }\n\n          clearTimeouts()\n          // Edge case: if the tippy is currently hiding (but still mounted and\n          // visible due to its opacity), it will slide to the new reference\n          // element but fully to fade out before fading back in.\n          // Also, we need to ensure the `popper` element doesn't set its\n          // `transitionDuration` to 0ms, so it can transition smoothly\n          if (\n            !singletonInstance.state.isVisible &&\n            singletonInstance.state.isMounted\n          ) {\n            singletonInstance.show(undefined, false)\n          } else {\n            showTimeout = setTimeout((): void => {\n              singletonInstance.show()\n            }, getValue(delay, 0, tippy.defaultProps.delay))\n          }\n        },\n        onUntrigger(instance, event): void {\n          onUntrigger(instance, event)\n\n          clearTimeouts()\n          hideTimeout = setTimeout((): void => {\n            singletonInstance.hide()\n          }, getValue(delay, 1, tippy.defaultProps.delay))\n        },\n      })\n\n      // Ensure the lifecycles functions are updateable\n      const originalSetProps = instance.setProps\n      instance.setProps = (partialProps): void => {\n        // `delay` can't be updated\n        delete partialProps.delay\n\n        originalSetProps(partialProps)\n\n        onTrigger = partialProps.onTrigger || onTrigger\n        onUntrigger = partialProps.onUntrigger || onUntrigger\n      }\n    },\n  )\n\n  const originalSetProps = singletonInstance.setProps\n  singletonInstance.setProps = (partialProps): void => {\n    delay = partialProps.delay !== undefined ? partialProps.delay : delay\n    originalSetProps(partialProps)\n  }\n\n  const originalDestroy = singletonInstance.destroy\n  singletonInstance.destroy = (\n    shouldDestroyPassedInstances: boolean = true,\n  ): void => {\n    tippyInstances.forEach(\n      (instance): void => {\n        // Reset the original lifecycle hooks to prevent stack overflow if\n        // calling again.\n        // Note: users must always destroy the singleton instance before calling\n        // `createSingleton()` again on the same instances.\n        instance.setProps({\n          onTrigger,\n          onUntrigger,\n        })\n\n        if (__DEV__) {\n          delete instance.__singleton__\n        }\n\n        if (shouldDestroyPassedInstances) {\n          instance.destroy()\n        }\n      },\n    )\n\n    originalDestroy()\n  }\n\n  return singletonInstance\n}\n","/* eslint-disable no-undef */\nimport delegate from '../src/addons/delegate.ts'\nimport createSingleton from '../src/addons/createSingleton.ts'\n\nif (typeof tippy === 'function') {\n  tippy.delegate = delegate\n  tippy.createSingleton = createSingleton\n} else {\n  throw new Error(\n    '[tippy.js ERROR] `tippy` is not a global function. Make sure you have ' +\n      'included the tippy script before tippy-addons.',\n  )\n}\n\nexport { delegate, createSingleton }\n"],"names":["isBrowser","window","document","ua","navigator","userAgent","test","platform","getValue","value","index","defaultValue","Array","isArray","v","delegate","targets","props","listeners","childTippyInstances","target","instanceOrInstances","tippy","onTrigger","event","targetNode","closest","instance","showOnInit","concat","on","element","eventType","listener","options","addEventListener","push","applyMutations","originalDestroy","destroy","forEach","removeEventListener","removeEventListeners","reference","trigger","trim","split","addEventListeners","setProps","createSingleton","tippyInstances","showTimeout","hideTimeout","onUntrigger","optionalProps","delay","singletonInstance","createElement","clearTimeouts","clearTimeout","popper","style","opacity","originalClearDelayTimeouts","clearDelayTimeouts","getBoundingClientRect","state","isVisible","isMounted","show","undefined","setTimeout","defaultProps","hide","originalSetProps","partialProps","shouldDestroyPassedInstances","Error"],"mappings":"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"}