@import './_mixins.scss';
@import './_vars.scss';
@import './animations/fade.scss';
@import './animations/shift-away.scss';

.#{$namespace-prefix}-iOS {
  cursor: pointer !important;
  -webkit-tap-highlight-color: transparent;
}

.#{$namespace-prefix}-popper {
  pointer-events: none;
  max-width: calc(100% - 8px);
  transition-timing-function: cubic-bezier(0.165, 0.84, 0.44, 1);
}

.#{$namespace-prefix}-tooltip {
  position: relative;
  color: white;
  border-radius: 0.25rem;
  font-size: 0.875rem;
  line-height: 1.4;
  text-align: center;
  background-color: #333;
  overflow: hidden;
  transition-property: visibility, opacity, transform;
  outline: 0;

  @each $placement in $placements {
    &[data-placement^='#{$placement}'] {
      .#{$namespace-prefix}-backdrop {
        transform-origin: nth(
          $backdrop-origins,
          index($placements, $placement)
        );
        border-radius: nth(
          $backdrop-border-radii,
          index($placements, $placement)
        );

        &[data-state='visible'] {
          @include backdrop-transform-enter($placement);
        }

        &[data-state='hidden'] {
          @include backdrop-transform-leave($placement);
        }
      }

      .#{$namespace-prefix}-svgArrow {
        @include svgArrow-transform-origin($placement, 7px);
        @include arrow-margin($placement);
        @include arrow-position($placement, 7px, true);

        svg {
          @include svgArrow-transform($placement);
        }
      }

      .#{$namespace-prefix}-arrow {
        @include arrow($placement, 8px, #333);
        @include arrow-margin($placement);
        @include arrow-transform-origin($placement, 7px);
        @include arrow-position($placement, 7px, false);
      }
    }
  }

  &[data-size='small'] {
    padding: 0.1875rem 0.375rem;
    font-size: 0.75rem;
  }

  &[data-size='large'] {
    padding: 0.375rem 0.75rem;
    font-size: 1rem;
  }

  &[data-arrow] {
    overflow: visible;
  }

  &[data-animatefill] {
    // Declared with !important so that custom themes don't need to specify
    // this property.
    background-color: transparent !important;
  }

  &[data-interactive] {
    pointer-events: auto;

    .#{$namespace-prefix}-svgArrow path {
      pointer-events: auto;
    }
  }

  &[data-inertia] {
    &[data-state='visible'] {
      transition-timing-function: cubic-bezier(0.54, 1.5, 0.38, 1.11);
    }
    &[data-state='hidden'] {
      transition-timing-function: ease;
    }
  }
}

.#{$namespace-prefix}-arrow {
  border-color: transparent;
  border-style: solid;
}

.#{$namespace-prefix}-arrow,
.#{$namespace-prefix}-svgArrow {
  position: absolute;

  &[data-state='hidden'] {
    opacity: 0;
  }
}

.#{$namespace-prefix}-svgArrow {
  width: 18px;
  height: 7px;
  fill: #333;
  pointer-events: none;

  svg {
    position: absolute;
    left: 0;
  }
}

.#{$namespace-prefix}-backdrop {
  position: absolute;
  background-color: #333;
  border-radius: 50%;
  width: calc(110% + 2rem);
  left: 50%;
  top: 50%;
  z-index: -1;
  transition: all cubic-bezier(0.46, 0.1, 0.52, 0.98);
  backface-visibility: hidden;

  &[data-state='hidden'] {
    opacity: 0;
  }

  &::after {
    content: '';
    float: left;
    padding-top: 100%;
  }
}

.#{$namespace-prefix}-content {
  padding: 0.3125rem 0.5625rem;
}

.#{$namespace-prefix}-backdrop + .#{$namespace-prefix}-content {
  transition-property: opacity;
  will-change: opacity;

  &[data-state='hidden'] {
    opacity: 0;
  }
}
